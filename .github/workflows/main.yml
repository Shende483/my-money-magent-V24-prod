name: Deploy Frontend1 & Backend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create frontend1 .env
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > frontend1/.env

      - name: Install & build frontend1
        run: |
          cd frontend1
          npm ci
          npm run build

      - name: Upload frontend1 artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend1-dist
          path: frontend1/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build-frontend   # âœ… must match job name above
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: frontend1-dist
          path: ./frontend1-dist

      - name: Setup SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key
          chmod 600 key

      - name: Copy frontend1 to VPS
        run: |
          rsync -az --delete -e "ssh -i key -o StrictHostKeyChecking=no" \
            ./frontend1-dist/ \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_APP_DIR }}/frontend1/

      - name: Copy backend source
        run: |
          rsync -az --delete --exclude=node_modules --exclude=dist \
            -e "ssh -i key -o StrictHostKeyChecking=no" \
            ./backend/ \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_APP_DIR }}/backend/

      - name: Create backend .env on VPS
        run: |
          echo "${{ secrets.BACKEND_ENV }}" > backend.env
          scp -i key -o StrictHostKeyChecking=no backend.env \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_APP_DIR }}/backend/.env
          rm -f backend.env

      - name: Install & restart backend (PM2)
        run: |
          ssh -i key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ${{ secrets.REMOTE_APP_DIR }}/backend
          npm ci
          npm run build
          pm2 restart my-backend || pm2 start dist/main.js --name my-backend
          pm2 save
          EOF

      - name: Cleanup
        run: rm -f key

